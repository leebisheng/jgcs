<!DOCTYPE html>
<html lang="en">
	<head>
		<title>three.js webgl - AMF</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<style>
			body {
				font-family: Monospace;
				background-color: #000000;
				margin: 0px;
				overflow: hidden;
			}

		
			a { color: skyblue }
			.button { background:#999; color:#eee; padding:0.2em 0.5em; cursor:pointer }
			.highlight { background:orange; color:#fff; }

			span {
				display: inline-block;
				width: 60px;
				float: left;
				text-align: center;
			}

		</style>
	</head>
	<body>
		
		<script src="../build/three.js"></script>
		<script src="../js/loaders/AMFLoader.js"></script>

		<script src="../js/Detector.js"></script>
		<script src="../js/controls/OrbitControls.js"></script>

		<script>

			if ( ! Detector.webgl ) Detector.addGetWebGLMessage();
			var pointerArray= new Array();
			var camera, scene, renderer;
			var mouseX = 0, mouseY = 0;
			init();
			animate();
			function init() {

			//scene
				scene = new THREE.Scene();
				scene.add( new THREE.AmbientLight( 0x999999 ) );
			//camera
				camera = new THREE.PerspectiveCamera( 35, window.innerWidth / window.innerHeight, 1, 500 );

				// Z is up for objects intended to be 3D printed.

				camera.up.set( 0, 0, 1 );
				camera.position.set( 0, -9, 6 );

				camera.add( new THREE.PointLight( 0xffffff, 0.8 ) );

				scene.add( camera );
			//grid
				var grid = new THREE.GridHelper( 500, 50, 0xffffff, 0x555555 );
				grid.position= new THREE.Vector3(0,0,0);
				grid.rotateOnAxis( new THREE.Vector3( 1, 0, 0 ), 90 * ( Math.PI/180 ) );
				scene.add( grid );
				
				//pointer---libs》---------
				var geometry = new THREE.CylinderGeometry( 0, 1, 30, 60 );//顶面积0，底面积1，高30，圆分割120
				geometry.rotateX( Math.PI / 2 );

				var material = new THREE.MeshNormalMaterial();
				var pointer_cnt=8;						//----手工修改---
				var radius=50;                //----手工修改----
				pointerArray[0]=pointer_cnt;
				
				var angle=2*Math.PI/pointer_cnt;
				for ( var i = 0; i < pointer_cnt; i ++ ) {

					var mesh = new THREE.Mesh( geometry, material );
					var vector=new THREE.Vector3(radius*Math.cos(i*angle),radius*Math.sin(i*angle),0);
					mesh.position.x = vector.x ;
					mesh.position.y = vector.y;
					mesh.position.z = vector.z;
					mesh.scale.x = mesh.scale.y = mesh.scale.z = 1;
					scene.add( mesh );
					
					pointerArray[i+1]=vector;

				}
				///-----《libs---------
				

				renderer = new THREE.WebGLRenderer( { antialias: true } );
				renderer.setClearColor( 0x999999 );
				renderer.setPixelRatio( window.devicePixelRatio );
				renderer.setSize( window.innerWidth, window.innerHeight );
				document.body.appendChild( renderer.domElement );
			

				var controls = new THREE.OrbitControls( camera, renderer.domElement );
				controls.addEventListener( 'change', render );
				controls.target.set( 0, 1.2, 2 );
				controls.update();

				window.addEventListener( 'resize', onWindowResize, false );

			}

			function onWindowResize() {

				camera.aspect = window.innerWidth / window.innerHeight;
				camera.updateProjectionMatrix();

				renderer.setSize( window.innerWidth, window.innerHeight );

				render();

			}
			function onDocumentMouseMove(event) {

				mouseX = ( event.clientX - windowHalfX ) * 10;
				mouseY = ( event.clientY - windowHalfY ) * 10;

			}
			
			function animate() {

				requestAnimationFrame( animate );

				render();
			}
			
			function render() {

				var time = Date.now() * 0.0005;
				var vector3=new THREE.Vector3(Math.sin( time * 0.7 ) * 2000,Math.cos( time * 0.3 ) * 2000,Math.cos( time * 0.3 ) * 2000);
				for ( var i = 3, l = scene.children.length; i < l; i ++ ) {

					//1是camera 2是grid 3开始才是Poter 注意看前面的scene.add
					//scene.children[ i].rotateOnAxis(pointerArray[i-2],Math.random()*0.01);
					//scene.children[ i].scale.z=Math.random()*10;
	
				}

		

				renderer.render( scene, camera );

			}

		</script>
	</body>
</html>